@startuml Classes

enum HttpRequestLibrary {
    CPR
}
hide HttpRequestLibrary methods

enum HttpRequestBody {
    FORMDATA,
    RAW
}
hide HttpRequestBody methods

enum HttpRequestMethod {
    DELETE,
    GET,
    HEAD,
    OPTIONS,
    PATCH,
    POST,
    PUT
}
hide HttpRequestMethod methods

class RequestFactory {
    + {static} getRequest(library: HttpRequestLibrary): Request
}
hide RequestFactory fields

class RequestBodyFactory {
    + {static} getRequestBody(bodyType: HttpRequestBody, httpLibrary: HttpRequestLibrary): RequestBody
}
hide RequestBodyFactory fields

interface Request<HttpLibrary> {
    ' Members
    - requestMethod: HttpRequestMethod
    - body: RequestBody
    - httpLibrary: HttpLibrary

    ' Methods
    + Request(method: std::string, uri: std::string)
    + addHeader(header: std::string, value: std::string): void
    + addCookie(cookie: std::string, value: std::string): void
    + setBody(body: RequestBody)
}

interface RequestBody<InputDataType, OutputDataType> {
    ' Members
    - data: InputDataType

    ' Methods
    + setData(data: InputDataType): void
    + getData(): OutputDataType
}

class CprRequest<cpr::Session>
hide CprRequest fields
hide CprRequest methods

class CprFormdataRequestBody<Map<std::string, std::string>, cpr::Multipart>
hide CprFormdataRequestBody fields
hide CprFormdataRequestBody methods

class CprRawRequestBody<std::string, std::string>
hide CprRawRequestBody fields
hide CprRawRequestBody methods

@enduml